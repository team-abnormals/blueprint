buildscript {
    repositories {
        maven { url = "https://files.minecraftforge.net/maven" }
        maven { url = "https://dist.creeper.host/Sponge/maven" }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "3.+", changing: true
        classpath group: "org.spongepowered", name: "mixingradle", version: "0.7-SNAPSHOT"
    }
}

plugins {
    id "com.github.johnrengelman.shadow" version "4.0.4"
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: "eclipse"
apply plugin: "maven-publish"
apply plugin: "org.spongepowered.mixin"

mixin {
    add sourceSets.main, "abnormals_core.refmap.json"
}

configurations {
    shade
}

version = "${project.minecraft}-${project.modVersion}"
group = "com.minecraftabnormals"
archivesBaseName = project.modId

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = "1.8"

minecraft {
    mappings channel: project.mappingsChannel, version: project.mappings
    accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")
    runs {
        client {
            workingDirectory project.file("run")
            property "forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP"
            property "forge.logging.console.level", "debug"
            arg "-mixin.config=abnormals_core.mixins.json"
            mods {
                abnormals_core {
                    source sourceSets.main
                }
                ac_test {
                    source sourceSets.test
                }
            }
        }
        server {
            workingDirectory project.file("run")
            property "forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP"
            property "forge.logging.console.level", "debug"
            arg "-mixin.config=abnormals_core.mixins.json"
            mods {
                abnormals_core {
                    source sourceSets.main
                }
                ac_test {
                    source sourceSets.test
                }
            }
        }
        data {
            workingDirectory project.file("run")
            property "forge.logging.markers", "SCAN,REGISTRIES,REGISTRYDUMP"
            property "forge.logging.console.level", "debug"
            args "--mod", "abnormals_core", "--all", "--output", file("src/generated/resources/")
            mods {
                abnormals_core {
                    source sourceSets.main
                }
                ac_test {
                    source sourceSets.test
                }
            }
        }
    }
}

task deobfJar(type: Jar) {
    description = "Creates a JAR containing the non-obfuscated compiled code."
    from sourceSets.main.output
    classifier = "deobf"
}

artifacts {
    archives deobfJar
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.minecraft}-${project.forge}"

    compileOnly fg.deobf("com.github.Ocelot5836:Sonar:4cc95e6:api")
    runtimeOnly fg.deobf("com.github.Ocelot5836:Sonar:4cc95e6")
    shade "com.github.Ocelot5836:Sonar:4cc95e6"
}

repositories {
    maven {
        url = "https://jitpack.io"
    }
}

jar {
    classifier = "slim"
    manifest {
        attributes([
                "Specification-Title": project.modName,
                "Specification-Vendor": "Team Abnormals",
                "Specification-Version": "1",
                "Implementation-Title": project.modName,
                "Implementation-Version": project.modVersion,
                "Implementation-Vendor": "Team Abnormals",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "abnormals_core.mixins.json"
        ])
    }
}

shadowJar {
    configurations = [project.configurations.shade]
    classifier = null
}

reobf {
    shadowJar {}
}

artifacts {
    archives jar
    archives shadowJar
}

build.dependsOn reobfShadowJar